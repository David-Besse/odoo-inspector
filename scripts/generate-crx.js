/**
 * Script pour g√©n√©rer un fichier CRX √† partir des fichiers de l'extension
 * Utilise la biblioth√®que crx pour cr√©er un CRX valide
 * @author David B.
 */

const fs = require('fs');
const path = require('path');
const ChromeExtension = require('crx');
const { version } = require('../package.json');

// Configuration
const DIST_DIR = path.join(__dirname, '../dist');
const OUTPUT_DIR = path.join(__dirname, '../packages');
const PRIVATE_KEY_FILE = path.join(__dirname, '../private-key.pem');
const CRX_OUTPUT_FILE = path.join(OUTPUT_DIR, `odoo-inspector-v${version}.crx`);

// Assurer que le r√©pertoire de sortie existe
if (!fs.existsSync(OUTPUT_DIR)) {
  fs.mkdirSync(OUTPUT_DIR, { recursive: true });
  console.log(`R√©pertoire ${OUTPUT_DIR} cr√©√© avec succ√®s`);
}

// V√©rifier que le r√©pertoire dist existe
if (!fs.existsSync(DIST_DIR)) {
  console.error(`‚ùå Erreur : Le r√©pertoire ${DIST_DIR} n'existe pas.`);
  console.error('Veuillez ex√©cuter "npm run build" avant de lancer ce script');
  process.exit(1);
}

// Fonction pour g√©n√©rer une cl√© priv√©e si elle n'existe pas
function ensurePrivateKey() {
  if (!fs.existsSync(PRIVATE_KEY_FILE)) {
    console.log(`‚öôÔ∏è G√©n√©ration d'une nouvelle cl√© priv√©e...`);
    const { execSync } = require('child_process');
    
    try {
      // Utiliser OpenSSL pour g√©n√©rer une cl√© RSA
      execSync(`openssl genrsa 2048 > "${PRIVATE_KEY_FILE}"`);
      console.log(`‚úÖ Nouvelle cl√© priv√©e g√©n√©r√©e: ${PRIVATE_KEY_FILE}`);
      console.log(`‚ö†Ô∏è IMPORTANT: Conservez ce fichier en s√©curit√©. Il est n√©cessaire pour mettre √† jour l'extension.`);
    } catch (error) {
      console.error(`‚ùå Erreur lors de la g√©n√©ration de la cl√© priv√©e:`, error.message);
      process.exit(1);
    }
  }
}

// Fonction pour g√©n√©rer le fichier CRX
async function generateCRX() {
  try {
    console.log(`üîÑ G√©n√©ration du fichier CRX...`);
    
    // S'assurer que la cl√© priv√©e existe
    ensurePrivateKey();
    
    // Cr√©er une nouvelle instance de ChromeExtension
    const crx = new ChromeExtension({
      privateKey: fs.readFileSync(PRIVATE_KEY_FILE),
      codebase: `https://example.com/extensions/odoo-inspector-v${version}.crx` // URL factice pour les m√©tadonn√©es
    });
    
    // Charger les fichiers depuis le r√©pertoire dist
    await crx.load(DIST_DIR);
    
    // Empaqueter l'extension au format CRX
    const crxBuffer = await crx.pack();
    
    // √âcrire le fichier CRX
    fs.writeFileSync(CRX_OUTPUT_FILE, crxBuffer);
    
    // G√©n√©rer √©galement le fichier ZIP propre (sans fichiers temporaires)
    const zipOutputFile = path.join(OUTPUT_DIR, `odoo-inspector-v${version}.zip`);
    const zipBuffer = await crx.loadContents();
    fs.writeFileSync(zipOutputFile, zipBuffer);
    
    // Afficher les informations
    const crxStats = fs.statSync(CRX_OUTPUT_FILE);
    const crxSizeInMB = (crxStats.size / 1024 / 1024).toFixed(2);
    
    const zipStats = fs.statSync(zipOutputFile);
    const zipSizeInMB = (zipStats.size / 1024 / 1024).toFixed(2);
    
    console.log(`‚úÖ Extension CRX g√©n√©r√©e avec succ√®s !`);
    console.log(`üì¶ ${CRX_OUTPUT_FILE}`);
    console.log(`üìä Taille CRX : ${crxSizeInMB} MB`);
    console.log(`üì¶ ${zipOutputFile}`);
    console.log(`üìä Taille ZIP : ${zipSizeInMB} MB`);
    console.log(`\n‚ö†Ô∏è Note : Depuis Chrome 75, l'installation directe des fichiers CRX n√©cessite certaines configurations.`);
    console.log(`üí° Vous pouvez utiliser ce fichier CRX pour une installation par les m√©thodes suivantes :`);
    console.log(`   1. Distribution via une politique d'entreprise (d√©ploiement administratif)`);
    console.log(`   2. Installation par glisser-d√©poser dans chrome://extensions/ en mode d√©veloppeur (peut ne pas fonctionner dans les versions r√©centes)`);
    console.log(`   3. D√©ploiement via un serveur web avec les en-t√™tes Content-Type appropri√©s`);
    
  } catch (error) {
    console.error(`‚ùå Erreur lors de la g√©n√©ration du fichier CRX:`, error.message);
    process.exit(1);
  }
}

// Ex√©cuter le script
generateCRX(); 